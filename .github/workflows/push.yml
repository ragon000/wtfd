name: Push
on: 
  push:
    branches:
      - '**'
  pull_request:

jobs:
  dynamic:
    name: Build Dynamic
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Build
      run: |
        set -e
        go build cmd/wtfd.go
        strip wtfd

    - name: Prepare artifact upload
      run: |
        set -e
        mkdir build
        cp -r icon.svg html/ wtfd build/

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: wtfd-dynamic
        path: build

  static:
    name: Build Static
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Install Dependencies
      run: |
        set -e
        sudo apt-get update && sudo apt-get -y install musl-tools

    - name: Build (with musl)
      env:
        CC: musl-gcc
      run: | 
        set -e
        go build -ldflags '-linkmode external -extldflags "-static"' -v cmd/wtfd.go
        strip wtfd

    - name: Prepare artifact upload
      run: |
        set -e
        mkdir build
        cp -r wtfd icon.svg html build/

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: wtfd-static
        path: build

  test:
    name: Run Test
    runs-on: ubuntu-latest
    needs: [dynamic, static]
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Test
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Uploade Coverage to codecov.io
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
